version: '3.7'
services:
  http-proxy: 
    image: wcogtas/http-proxy:dev
    container_name: http-proxy
    build:  
      context: ./gtas-parent
      dockerfile: docker-resources/proxy.Dockerfile
    restart: unless-stopped
    ports:
      - 443:443
      - 80:80
    networks:
      - gtas-webapp-network
    secrets:
      - elastic-bootstrap-password

  web-app:
    image: wcogtas/webapp:dev
    container_name: web-app
    build: 
      context: ./gtas-parent
      dockerfile: web-app.Dockerfile
    ports:
      - 8080:8080
      - 8443:8443
    environment:
      - KIBANA_HOST=kibana
      - NEO4J_HOST=neo4j
      - ACTIVEMQ_HOST=activemq
      - PROXY_HOST=httpproxy
      - ELASTICSEARCH=elasticsearch
    networks:
      - gtas-webapp-network
    restart: unless-stopped
    secrets:
     - mysql-webapp-user
     - mysql-webapp-password
     - webapp-neo4j-user
     - webapp-neo4j-password
     - elastic-bootstrap-password
    volumes:
      - m2:/root/.m2
      - scheduler-logs:/scheduler-logs

  gtas-scheduler:
    image: wcogtas/gtas-scheduler:dev
    container_name: gtas-scheduler
    build: 
      context: .
      dockerfile: ./gtas-parent/gtas-job-scheduler-war/gtas-scheduler.Dockerfile
    restart: unless-stopped
    environment:
      KIBANA_HOST: kibana
      NEO4J_HOST: neo4j
      ACTIVEMQ_HOST: activemq
    volumes:
      - scheduler-logs:/usr/local/tomcat/logs
    secrets:
      - mysql-processor-user
      - mysql-processor-password
      - webapp-neo4j-user
      - webapp-neo4j-password
    networks:
      - gtas-webapp-network
    depends_on: 
      - activemq

  activemq:
    image: rmohr/activemq:5.15.9
    container_name: activemq
    restart: unless-stopped
    networks: 
      - gtas-webapp-network

  mariadb: 
    image: wcogtas/mariadb:dev
    build:
      context: ./gtas-parent
      dockerfile: mariadb.Dockerfile
    container_name: mariadb
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql-root-password
    secrets:
     - mysql-etl-user
     - mysql-etl-password
     - mysql-processor-user
     - mysql-processor-password
     - mysql-webapp-user
     - mysql-webapp-password
     - mysql-healthcheck-user
     - mysql-healthcheck-password
     - mysql-logstash-user
     - mysql-logstash-password
     - mysql-root-password
    ports:
      - 3306:3306
    networks:
      - gtas-webapp-network
    restart: unless-stopped
    volumes:
      - db-data:/var/lib/mysql

  etl-job:
    container_name: etl-job
    image: wcogtas/neo4j-etl-job:dev
    build:
      context: .
      dockerfile: ./gtas-neo4j-etl/etl_job.Dockerfile
    environment:
      NEO4J_HOSTNAME: neo4j
    restart: unless-stopped
    secrets:
      - mysql-etl-user
      - mysql-etl-password
      - etl-neo4j-user
      - etl-neo4j-password
    networks: 
      - gtas-webapp-network
    depends_on: 
      - neo4j

  neo4j:
    container_name: neo4j
    image: wcogtas/neo4j:dev
    build:
      context: .
      dockerfile: ./gtas-neo4j-etl/neo4j.Dockerfile
    restart: unless-stopped
    volumes:
       - neo4j-data:/data
    ports:
      - 7474:7474   
      - 7687:7687
    networks: 
      - gtas-webapp-network

  kibana:
    container_name: kibana
    image: wcogtas/kibana:dev
    build:
      context: ./gtas-parent/scripts/elastic
      dockerfile: install/docker/kibana/kibana.Dockerfile
    environment:
      ELASTICSEARCH_HOSTS: https://elasticsearch:9200
    ports:
      - 5601:5601
    restart: unless-stopped
    volumes:
      - kibana-conf:/usr/share/kibana/data
    networks:
      - gtas-webapp-network
    depends_on:
      - elasticsearch

  elasticsearch:
    image: wcogtas/elasticsearch:dev
    container_name: elasticsearch
    build:
      context: ./gtas-parent/scripts/elastic
      dockerfile: install/docker/elasticsearch/elasticsearch.Dockerfile
    ports:
      - 9300:9300
      - 9200:9200
    restart: unless-stopped
    volumes: 
      - es-data:/usr/share/elasticsearch/data
      - elasticsearch-conf:/usr/share/elasticsearch/config
    networks: 
      - gtas-webapp-network

  logstash:
    image: wcogtas/logstash:dev
    container_name: logstash
    build:
      context: ./gtas-parent/scripts/elastic
      dockerfile: ./install/docker/logstash/logstash.Dockerfile
    environment:
      ELASTIC_HOST: 'https://elasticsearch'
      XPACK_MONITORING_ELASTICSEARCH_HOSTS: 'elasticsearch'
      LOGSTASH_KEYSTORE_PASS: admin123
    restart: unless-stopped
    secrets:
      - elastic-ca
      - source: logstash-keystore
        target: /keystore/logstash.keystore
    networks:
      - gtas-webapp-network
    depends_on:
      - elasticsearch

  elk-setup:
    image: wcogtas/elk-setup:dev
    container_name: elk-setup
    build:
      context: ./gtas-parent/scripts/elastic
      dockerfile: ./install/docker/elk-setup/elk-setup.Dockerfile
    environment:
      KIBANA_HOST: 'kibana'
      ELASTICSEARCH_HOST: 'elasticsearch'
    volumes:
#      - logstash-conf:/logstash-conf
      - kibana-conf:/kibana-conf
      - elasticsearch-conf:/elasticsearch-conf
    secrets:
      - logstash-keystore-password
      - mysql-logstash-user
      - mysql-logstash-password
      - elastic-password
      - elasticsearch-kibana-user
      - elasticsearch-kibana-password
      - elastic-bootstrap-password
    networks:
      - gtas-webapp-network


secrets:
  mysql-etl-user:
    file: ./gtas-parent/gtas-commons/secrets/mysql_etl_user.txt
  mysql-etl-password:
    file: ./gtas-parent/gtas-commons/secrets/mysql_etl_password.txt
  mysql-healthcheck-user:
    file: ./gtas-parent/gtas-commons/secrets/mysql_healthcheck_user.txt
  mysql-healthcheck-password:
    file: ./gtas-parent/gtas-commons/secrets/mysql_healthcheck_password.txt
  mysql-logstash-user:
    file: ./gtas-parent/gtas-commons/secrets/mysql-logstash-user
  mysql-logstash-password:
    file: ./gtas-parent/gtas-commons/secrets/mysql-logstash-password
  mysql-processor-user:
    file: ./gtas-parent/gtas-commons/secrets/mysql_processor_user.txt
  mysql-processor-password:
    file: ./gtas-parent/gtas-commons/secrets/mysql_processor_password.txt
  mysql-webapp-user:
    file: ./gtas-parent/gtas-commons/secrets/mysql_webapp_user.txt
  mysql-webapp-password:
    file: ./gtas-parent/gtas-commons/secrets/mysql_webapp_password.txt
  mysql-root-password:
    file: ./gtas-parent/gtas-commons/secrets/mysql_root_password.txt
  webapp-neo4j-user:
    file: ./gtas-parent/gtas-commons/secrets/webapp_neo4j_user.txt
  webapp-neo4j-password:
    file: ./gtas-parent/gtas-commons/secrets/webapp_neo4j_password.txt
  logstash-keystore-password:
    file: ./gtas-parent/gtas-commons/secrets/logstash-keystore-password
  elastic-password:
    file: ./gtas-parent/gtas-commons/secrets/elastic-password
  elasticsearch-kibana-user:
    file: ./gtas-parent/gtas-commons/secrets/elasticsearch-kibana-user
  elasticsearch-kibana-password:
    file: ./gtas-parent/gtas-commons/secrets/elasticsearch-kibana-password
  elastic-bootstrap-password:
    file: ./gtas-parent/gtas-commons/secrets/elastic-bootstrap-password
  elastic-ca:
    file: ./gtas-parent/gtas-commons/certs/elastic-ca.crt
  etl-neo4j-user:
    file: ./gtas-parent/gtas-commons/secrets/etl_neo4j_user.txt
  etl-neo4j-password:
    file: ./gtas-parent/gtas-commons/secrets/etl_neo4j_password.txt
  logstash-keystore:
    file: ./gtas-parent/gtas-commons/secrets/logstash.keystore
volumes:
  db-data:
  m2:
  scheduler-logs:
  certs:
  neo4j-data:
    labels:
      kompose.volume.size: 200Gi
  kibana-conf:
  elasticsearch-conf:
  es-data:
    labels:
      kompose.volume.size: 200Gi

networks:
  gtas-webapp-network:
    attachable: true